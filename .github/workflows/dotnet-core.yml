name: Build and Test

on:
  push:
    branches: [ master, release, prerelease]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
          - run : ls
          - uses: actions/checkout@v2
          - name: Setup .NET Core 3.1
            uses: actions/setup-dotnet@v1
            with:
              dotnet-version: '3.1.101'
          #- name: Setup .NET 5.0
          #  uses: actions/setup-dotnet@v1
          #  with:
          #    dotnet-version: '5.0.100-preview.6.20318.15'
          #- name: DOTNET HACK
    #  https://github.com/actions/setup-dotnet/issues/25
          #  shell: pwsh
          #  run: |
          #      $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          #      $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          #      $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          #      foreach ($dir in $directories) {
          #        $from = $dir.FullName;
          #        $to = "$root/$version";
          #        Write-Host Copying from $from to $to;
          #        Copy-Item "$from\*" $to -Recurse -Force;
          #      }
          
          #- name: Install dependencies
          #  run: dotnet restore
          #- name: Build
          #  run: dotnet build --configuration Release --no-restore
          #- name: Test
          #  run: dotnet test UnitTest/UnitTests.csproj
  package:
    runs-on:  ubuntu-latest 
    needs: [build]
    if: github.ref == 'refs/heads/release'  || github.ref ==  'refs/heads/prerelease'
    steps:
      - uses: actions/checkout@v2
      - name: Build_Package
        run : |
              dotnet pack ClassLibrary\\ClassLibrary.csproj -c Release --output=package_output
        id  : Build_Package
      - name: Tag commit
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.Build_Package.outputs.version }}"
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "package_output/*.nupkg"
          prerelease: true
          draft: true
          tag: "${{ steps.Build_Package.outputs.version }}"
          token: ${{ secrets.GITHUB_TOKEN }}
              
        
